name: Deploy Lambda Function

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_HOST: dummy-host
      DB_USER: dummy-user
      DB_PASSWORD: dummy-password
      DB_NAME: dummy-db
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-mock
    - name: Run tests
      run: |
        pytest tests/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-mock
        pip install awscli
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Build deployment package
      run: |
        mkdir -p package
        pip install -t package pymysql
        cd package
        zip -r ../lambda_deployment.zip .
        cd ..
        zip -g lambda_deployment.zip lambda_function.py
    - name: Update Lambda function
      run: |
        aws lambda update-function-code --function-name log-analysis-api --zip-file fileb://lambda_deployment.zip
